(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{0:function(t,e,n){"use strict";n.d(e,"w",(function(){return r})),n.d(e,"q",(function(){return o})),n.d(e,"k",(function(){return c})),n.d(e,"t",(function(){return l})),n.d(e,"l",(function(){return f})),n.d(e,"u",(function(){return d})),n.d(e,"o",(function(){return h})),n.d(e,"s",(function(){return m})),n.d(e,"m",(function(){return v})),n.d(e,"n",(function(){return y})),n.d(e,"i",(function(){return x})),n.d(e,"x",(function(){return w})),n.d(e,"j",(function(){return _})),n.d(e,"r",(function(){return O})),n.d(e,"b",(function(){return k})),n.d(e,"g",(function(){return j})),n.d(e,"c",(function(){return C})),n.d(e,"f",(function(){return R})),n.d(e,"d",(function(){return $})),n.d(e,"e",(function(){return E})),n.d(e,"h",(function(){return P})),n.d(e,"a",(function(){return S})),n.d(e,"p",(function(){return A})),n.d(e,"v",(function(){return N}));var r={fallbackLocale:"en",messages:{en:{},zh:{}}},o=[{code:"en",name:"English"},{code:"zh",name:"ä¸­æ–‡"}],c="en",l="___",f="default",d="prefix_except_default",h=!1,m=null,v={useCookie:!0,cookieCrossOrigin:!1,cookieDomain:null,cookieKey:"i18n_redirected",cookieSecure:!1,alwaysRedirect:!1,fallbackLocale:"",onlyOnRoot:!1},y=!1,x="",w={moduleName:"i18n",syncLocale:!1,syncMessages:!1,syncRouteParams:!0},_=function(){return null},O=function(){return null},k=!1,j="nuxt-i18n",C="code",R="iso",$="domain",E="file",P={PREFIX:"prefix",PREFIX_EXCEPT_DEFAULT:"prefix_except_default",PREFIX_AND_DEFAULT:"prefix_and_default",NO_PREFIX:"no_prefix"},S="nuxtI18n",A=["en","zh"],N=void 0},187:function(t){t.exports=JSON.parse('[{"constant":false,"inputs":[],"name":"buyPool1","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"pool5currUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"pool5users","outputs":[{"name":"isExist","type":"bool"},{"name":"id","type":"uint256"},{"name":"payment_received","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"pool3userList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"pool1userList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"pool8userList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pool1activeUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"pool1users","outputs":[{"name":"isExist","type":"bool"},{"name":"id","type":"uint256"},{"name":"payment_received","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"buyPool4","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"pool5activeUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"pool4userList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pool2activeUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"buyPool7","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"pool1currUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pool4activeUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"buyPool2","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"pool7currUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"pool6users","outputs":[{"name":"isExist","type":"bool"},{"name":"id","type":"uint256"},{"name":"payment_received","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"buyPool8","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"pool3users","outputs":[{"name":"isExist","type":"bool"},{"name":"id","type":"uint256"},{"name":"payment_received","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"unlimited_level_price","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"pool2userList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pool8activeUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"pool4users","outputs":[{"name":"isExist","type":"bool"},{"name":"id","type":"uint256"},{"name":"payment_received","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"pool6userList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"pool2users","outputs":[{"name":"isExist","type":"bool"},{"name":"id","type":"uint256"},{"name":"payment_received","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pool8currUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"pool7users","outputs":[{"name":"isExist","type":"bool"},{"name":"id","type":"uint256"},{"name":"payment_received","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_referrerID","type":"uint256"}],"name":"regUser","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"ownerWallet","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pool7activeUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pool4currUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"userList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"pool8users","outputs":[{"name":"isExist","type":"bool"},{"name":"id","type":"uint256"},{"name":"payment_received","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"currUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"users","outputs":[{"name":"isExist","type":"bool"},{"name":"id","type":"uint256"},{"name":"referrerID","type":"uint256"},{"name":"referredUsers","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"buyPool6","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"pool2currUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"buyPool3","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"pool3currUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"pool5userList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"pool7userList","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pool3activeUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pool6currUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"buyPool5","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"pool6activeUserID","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_user","type":"address"},{"indexed":true,"name":"_referrer","type":"address"},{"indexed":false,"name":"_time","type":"uint256"}],"name":"regLevelEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_user","type":"address"},{"indexed":true,"name":"_referral","type":"address"},{"indexed":false,"name":"_level","type":"uint256"},{"indexed":false,"name":"_time","type":"uint256"}],"name":"getMoneyForLevelEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_user","type":"address"},{"indexed":false,"name":"_value","type":"uint256"},{"indexed":false,"name":"_time","type":"uint256"}],"name":"regPoolEntry","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_user","type":"address"},{"indexed":true,"name":"_receiver","type":"address"},{"indexed":false,"name":"_value","type":"uint256"},{"indexed":false,"name":"_time","type":"uint256"}],"name":"getPoolPayment","type":"event"}]')},
function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,i.default)(e),o.test(e)};var n,i=(n=r(1))&&n.__esModule?n:{default:n};var o=/^[0-9A-F]+$/i;e.exports=t.default,e.exports.default=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,i.default)(e);var r=t?new RegExp("^[".concat(t,"]+"),"g"):/^\s+/g;return e.replace(r,"")};var n,i=(n=r(1))&&n.__esModule?n:{default:n};e.exports=t.default,e.exports.default=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){(0,i.default)(e);for(var r=t?new RegExp("[".concat(t,"]")):/\s/,n=e.length-1;n>=0&&r.test(e[n]);n--);return n<e.length?e.substr(0,n+1):e};var n,i=(n=r(1))&&n.__esModule?n:{default:n};e.exports=t.default,e.exports.default=t.default},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){return(0,i.default)(e),e.replace(new RegExp("[".concat(t,"]+"),"g"),"")};var n,i=(n=r(1))&&n.__esModule?n:{default:n};e.exports=t.default,e.exports.default=t.default},function(e,t,r){"use strict";r.r(t);var n=r(4),i=r.n(n),o=r(20),a=r.n(o),s=r(0),u=r.n(s);const c=a.a.providers.HttpProvider,f=new c("https://api.trongrid.io"),l=new c("https://api.trongrid.io"),d=new c("https://api.trongrid.io");let h,p;const v="TGAYUq6GEConL96N4BXQMdTLALcGtcvBBk";let g,m,b=localStorage.getItem("address"),y=localStorage.getItem("id");const w=window.location.href;localStorage.getItem("address")?w.indexOf("auccount")+1||w.indexOf("autopool")+1||w.indexOf("transactionash")+1||(location.href="./auccount.html"):(w.indexOf("auccount")+1||w.indexOf("autopool")+1||w.indexOf("transactionash")+1)&&(location.href="./"),window.addEventListener("message",(async function(e){e.data.message&&e.data.message.data.data.raw_data_hex&&e.data.message.data.success&&(u()("#pending").show(50,()=>{setTimeout(()=>{u()("#pending").hide(500)},4e3)}),console.log("e.data.message: ",e.data.message),console.log("e.data.message.action:",e.data.message.action),setTimeout(async()=>{u()(".product .product-status").each((function(e,t){u()(t).text(""),u()(t).append("<br>")})),p=await M(m.defaultAddress.base58),u()(".product .product-status").each((function(e,t){u()(`.received_payments span:eq(${e})`).html(p[e].payment_received),p[e].isCompleted?u()(t).text("Completed"):p[e].isExist?(u()(t).text("Active"),u()(t).css("color","#f9c615")):u()(t).text("Not Active")}))},4e3),w.indexOf("register")+1&&setTimeout(()=>{T(m.defaultAddress.base58)},1e4))})),window.addEventListener("load",(async function(){JSON.parse(localStorage.getItem("events"));let e=JSON.parse(localStorage.getItem("getMoneyForLevelEvents")),t=JSON.parse(localStorage.getItem("getPoolPayments")),r=JSON.parse(localStorage.getItem("regPoolEntries"));m=window.tronWeb,h=new a.a(f,l,d,"c90d36deb083a046cbdb9dee7c2a288ccafa3"),console.log("hi"),localStorage.getItem("address")&&!h.isAddress(localStorage.getItem("address"))&&(localStorage.clear(),location.href="./"),u()("#AccountID").html(u()("#AccountID").html()+y);i.a.get(`https://api.trongrid.io/event/contract/${v}/getMoneyForLevelEvent?size=200`).then(async t=>{if(e=t.data,200==e.length){let t,r=await i.a.get(`https://api.trongrid.io/event/contract/${v}/getMoneyForLevelEvent?sort=block_timestamp`);for(r=r.data[0].block_timestamp;e[e.length-1].block_timestamp>r;){t=e[e.length-1].block_timestamp;let r=await i.a.get(`https://api.trongrid.io/event/contract/${v}/getMoneyForLevelEvent?size=200&since=${t}`);e=e.concat(r.data)}}for(let t=1;t<=e.length;t++)for(let r=t;r<=e.length;r++)JSON.stringify(e[t-1])===JSON.stringify(e[r])&&(e.splice(r,1),r--);if(e=e.reverse(),localStorage.setItem("getMoneyForLevelEvents",JSON.stringify(e)),w.indexOf("auccount")+1){const t=await x(e,b);u()("#referralEarning").html(t)}if(w.indexOf("transactionash")+1){const t=await P(e,b);u()("#Referral table tr").remove();for(let e=0;e<t.length;e++)u()("#Referral table").append(`\n\t\t\t\t\t\t<tr>\n\t\t                    <td data-th="Transactionash"><a target="_blank" href="https://tronscan.org/#/transaction/${t[e].trxId}">${t[e].trxId}</a></td>\n\t\t\t                <td data-th="From address"><a target="_blank" href="https://tronscan.org/#/address/${t[e].from}">${t[e].from}</a></td>\n\t\t                    <td data-th="Amount">${t[e].value} TRX</td>\n\t\t                </tr>\n\t\t\t\t\t`)}}),i.a.get(`https://api.trongrid.io/event/contract/${v}/getPoolPayment?size=200`).then(async e=>{if(t=e.data,200==t.length){let e,r=await i.a.get(`https://api.trongrid.io/event/contract/${v}/getPoolPayment?sort=block_timestamp`);for(r=r.data[0].block_timestamp;t[t.length-1].block_timestamp>r;){e=t[t.length-1].block_timestamp;let r=await i.a.get(`https://api.trongrid.io/event/contract/${v}/getPoolPayment?size=200&since=${e}`);t=t.concat(r.data)}}for(let e=1;e<=t.length;e++)for(let r=e;r<=t.length;r++)JSON.stringify(t[e-1])===JSON.stringify(t[r])&&(t.splice(r,1),r--);if(t=t.reverse(),localStorage.setItem("getPoolPayments",JSON.stringify(t)),w.indexOf("auccount")+1){const e=await _(t,b);u()("#autoPoolEarning").html(e)}if(w.indexOf("transactionash")+1){const e=await I(t,b);u()("#Pool-Payments table tr").remove();for(let t=0;t<e.length;t++)u()("#Pool-Payments table").append(`\n\t\t\t\t\t\t<tr>\n\t\t                    <td data-th="Transactionash"><a target="_blank" href="https://tronscan.org/#/transaction/${e[t].trxId}">${e[t].trxId}</a></td>\n\t\t\t                <td data-th="From address"><a target="_blank" href="https://tronscan.org/#/address/${e[t].from}">${e[t].from}</a></td>\n\t\t                    <td data-th="Level">${e[t].poolNo}</td>\n\t\t                    <td data-th="Amount">${e[t].value} TRX</td>\n\t\t                </tr>\n\t\t\t\t\t`)}}),i.a.get(`https://api.trongrid.io/event/contract/${v}/regPoolEntry?size=200`).then(async e=>{if(r=e.data,200==r.length){let e,t=await i.a.get(`https://api.trongrid.io/event/contract/${v}/regPoolEntry?sort=block_timestamp`);for(t=t.data[0].block_timestamp;r[r.length-1].block_timestamp>t;){e=r[r.length-1].block_timestamp;let t=await i.a.get(`https://api.trongrid.io/event/contract/${v}/regPoolEntry?size=200&since=${e}`);r=r.concat(t.data)}}for(let e=1;e<=r.length;e++)for(let t=e;t<=r.length;t++)JSON.stringify(r[e-1])===JSON.stringify(r[t])&&(r.splice(t,1),t--);r=r.reverse(),localStorage.setItem("regPoolEntries",JSON.stringify(r))}),(async()=>{if(console.log("getMoneyForLevelEvents: ",e),console.log("getPoolPayments: ",t),console.log("regPoolEntries: ",r),console.log(m),g=m&&m.ready?await m.contract().at(v):await h.contract().at(v),console.log(g),u()("#refLink input").remove(),u()("#refLink").append(`\n\t\t\t\t<input type="util.TextDecoder(encoding, =, 'utf-8', options, =, {});t" name="" value="${window.location.origin}?ref=${y}" id="copyRefLink">\n\t\t\t`),u()("#copyRefLink").click(()=>{let e=document.getElementById("copyRefLink");e.select(),e.setSelectionRange(0,99999),document.execCommand("copy")}),u()("#refLink").click(()=>{let e=document.getElementById("copyRefLink");e.select(),e.setSelectionRange(0,99999),document.execCommand("copy")}),w.indexOf("?ref=")+1){const e=w.substr(w.indexOf("?ref=")+5);w.indexOf("register")+1?u()("#referralCode").val(e):location.href="./register.html?ref="+e}if(w.indexOf("register")+1&&w.indexOf("?ref=")+1===0&&u()("#referralCode").val(1),w.indexOf("transactionash")+1){const r=await P(e,b),n=await I(t,b);u()("#Referral table tr").remove();for(let e=0;e<r.length;e++)u()("#Referral table").append(`\n\t\t\t\t\t\t<tr>\n\t\t                    <td data-th="Transactionash"><a target="_blank" href="https://tronscan.org/#/transaction/${r[e].trxId}">${r[e].trxId}</a></td>\n\t\t\t                <td data-th="From address"><a target="_blank" href="https://tronscan.org/#/address/${r[e].from}">${r[e].from}</a></td>\n\t\t                    <td data-th="Amount">${r[e].value} TRX</td>\n\t\t                </tr>\n\t\t\t\t\t`);u()("#Pool-Payments table tr").remove();for(let e=0;e<n.length;e++)u()("#Pool-Payments table").append(`\n\t\t\t\t\t\t<tr>\n\t\t                    <td data-th="Transactionash"><a target="_blank" href="https://tronscan.org/#/transaction/${n[e].trxId}">${n[e].trxId}</a></td>\n\t\t\t                <td data-th="From address"><a target="_blank" href="https://tronscan.org/#/address/${n[e].from}">${n[e].from}</a></td>\n\t\t                    <td data-th="Level">${n[e].poolNo}</td>\n\t\t                    <td data-th="Amount">${n[e].value} TRX</td>\n\t\t                </tr>\n\t\t\t\t\t`)}if(w.indexOf("auccount")+1){const r=await x(e,b);u()("#referralEarning").html(r);const n=await _(t,b);u()("#autoPoolEarning").html(n);const i=await A();u()("#directTeam").html(i);const o=await k();u()(".auccount-user-description span").each((function(e,t){u()(t).text(o[e])})),p=await M(b),u()(".product .product-status").each((function(e,t){u()(`.received_payments span:eq(${e})`).html(p[e].payment_received),p[e].isCompleted?u()(t).text("Completed"):p[e].isExist&&(u()(t).text("Active"),u()(t).css("color","#f9c615"))}))}if(w.indexOf("autopool")+1){const e=await S(),t=await k();if(u()("td[data-th='Current user address']").each((function(t,r){u()(r).text(e[t])})),u()("td[data-th='Total users']").each((function(e,r){u()(r).text(t[e])})),w.indexOf("?")+1){const e=Number(w.substr(w.indexOf("?")+1));console.log(e),E(r,e)}}w.indexOf("login")+1||w.indexOf("register")+1?(u()("body").css("background","background: rgb(25,25,63)"),u()("body").css("background","linear-gradient(94deg, rgba(25,25,63,1) 9%, rgba(85,34,149,1) 100%)"),u()(".main").css("background","linear-gradient(94deg, rgba(25,25,63,1) 9%, rgba(85,34,149,1) 100%)")):w.indexOf("autopool")+1||w.indexOf("auccount")+1||w.indexOf("transactionash")+1?(u()("body").css("background","background: rgb(25,25,63)"),u()("body").css("background","linear-gradient(176deg, rgba(25,25,63,1) 23%, rgba(85,34,149,1) 100%)")):(u()("body").css("background","background: rgb(25,25,63)"),u()("body").css("background","linear-gradient(180deg, rgba(25,25,63,1) 9%, rgba(91,33,159,1) 30%, rgba(25,25,63,1) 36%, rgba(25,25,63,1) 72%, rgba(85,34,149,1) 100%)")),u()(".overflow").css("display","block"),u()("footer").css("display","block"),u()("#loader").css("display","none")})()}));const x=async(e,t)=>{let r=0;for(const n in e)if("getMoneyForLevelEvent"==e[n].event_name){e[n].result._user=="0x"+h.address.toHex(t).substr(2)&&(r+=500)}return console.log(`ReferralEarning from ${t}: `,r),r},_=async(e,t)=>{let r=0,n=0;for(const i in e)if("getPoolPayment"==e[i].event_name){let o=e[i].result._receiver,a="0x"+h.address.toHex(t).substr(2);o==a&&(console.log(`${o} == ${a}`),parseInt(e[i].result._value)/10**6==800&&console.log(e[i]),r+=parseInt(e[i].result._value)/10**6,n++)}return console.log(`AutoPoolEarning from ${t}: `,r),console.log("count of autopool: ",n),r},A=async()=>{let e=await g.users(b).call();return e=Number(e.referredUsers._hex),console.log(`DirectTeam from ${b}: `,e),e},k=async()=>{let e=await g.pool1currUserID().call(),t=await g.pool2currUserID().call(),r=await g.pool3currUserID().call(),n=await g.pool4currUserID().call(),i=await g.pool5currUserID().call(),o=await g.pool6currUserID().call(),a=await g.pool7currUserID().call(),s=await g.pool8currUserID().call(),u=[Number(e._hex),Number(t._hex),Number(r._hex),Number(n._hex),Number(i._hex),Number(o._hex),Number(a._hex),Number(s._hex)];return console.log("Pool All Users: ",u),u},M=async e=>{let t=await g.pool1users(e).call(),r=await g.pool2users(e).call(),n=await g.pool3users(e).call(),i=await g.pool4users(e).call(),o=await g.pool5users(e).call(),a=await g.pool6users(e).call(),s=await g.pool7users(e).call(),u=await g.pool8users(e).call(),c=[{isExist:t.isExist,isCompleted:Number(t.payment_received._hex)>=2,payment_received:Number(t.payment_received._hex)},{isExist:r.isExist,isCompleted:Number(r.payment_received._hex)>=2,payment_received:Number(r.payment_received._hex)},{isExist:n.isExist,isCompleted:Number(n.payment_received._hex)>=3,payment_received:Number(n.payment_received._hex)},{isExist:i.isExist,isCompleted:Number(i.payment_received._hex)>=3,payment_received:Number(i.payment_received._hex)},{isExist:o.isExist,isCompleted:Number(o.payment_received._hex)>=3,payment_received:Number(o.payment_received._hex)},{isExist:a.isExist,isCompleted:Number(a.payment_received._hex)>=3,payment_received:Number(a.payment_received._hex)},{isExist:s.isExist,isCompleted:Number(s.payment_received._hex)>=3,payment_received:Number(s.payment_received._hex)},{isExist:u.isExist,isCompleted:Number(u.payment_received._hex)>=3,payment_received:Number(u.payment_received._hex)}];return console.log("All Autopool: ",c),c},S=async()=>{let e=await g.pool1activeUserID().call(),t=await g.pool2activeUserID().call(),r=await g.pool3activeUserID().call(),n=await g.pool4activeUserID().call(),i=await g.pool5activeUserID().call(),o=await g.pool6activeUserID().call(),a=await g.pool7activeUserID().call(),s=await g.pool8activeUserID().call(),u=await g.userList(e).call(),c=await g.userList(t).call(),f=await g.userList(r).call(),l=await g.userList(n).call(),d=await g.userList(i).call(),p=await g.userList(o).call(),v=await g.userList(a).call(),m=await g.userList(s).call();const b=[h.address.fromHex(u),h.address.fromHex(c),h.address.fromHex(f),h.address.fromHex(l),h.address.fromHex(d),h.address.fromHex(p),h.address.fromHex(v),h.address.fromHex(m)];return console.log("ActiveAddresses:",b),b},E=async(e,t)=>{let r,n,i=await g.ownerWallet().call();switch(t){case 1:r=500;break;case 2:r=1e3;break;case 3:r=2e3;break;case 4:r=4e3;break;case 5:r=8e3;break;case 6:r=16e3;break;case 7:r=32e3;break;case 8:r=64e3;break;default:throw"incorrect pullNumber"}switch(t){case 1:n=await g.pool1users(i).call();break;case 2:n=await g.pool2users(i).call();break;case 3:n=await g.pool3users(i).call();break;case 4:n=await g.pool4users(i).call();break;case 5:n=await g.pool5users(i).call();break;case 6:n=await g.pool6users(i).call();break;case 7:n=await g.pool7users(i).call();break;case 8:n=await g.pool8users(i).call();break;default:throw"incorrect pullNumber"}[].push({address:h.address.fromHex(i),poolSequence:Number(n.id),paymentReceived:Number(n.payment_received),userId:Number(1)});for(const n in e)if("regPoolEntry"==e[n].event_name&&Number(e[n].result._value)/10**6==r){let r=h.address.fromHex(e[n].result._user);const i=await g.users(r).call();let o;switch(t){case 1:o=await g.pool1users(r).call();break;case 2:o=await g.pool2users(r).call();break;case 3:o=await g.pool3users(r).call();break;case 4:o=await g.pool4users(r).call();break;case 5:o=await g.pool5users(r).call();break;case 6:o=await g.pool6users(r).call();break;case 7:o=await g.pool7users(r).call();break;case 8:o=await g.pool8users(r).call();break;default:throw"incorrect pullNumber"}u()(".AutoPool-table table").append(`\n\t\t\t\t\t<tr>\n\t                    <td data-th="Pool No">${t}</td>\n\t                    <td data-th="ETH address">${r}</td>\n\t                    <td data-th="Pool sequence No.">${Number(o.id)}</td>\n\t                    <td data-th="Payment reseived">${Number(o.payment_received)}</td>\n\t                    <td data-th="User ID">${Number(i.id)}</td>\n\t                </tr>\n\t\t\t\t`)}},P=async(e,t)=>{let r=[];for(const n in e)if("getMoneyForLevelEvent"==e[n].event_name){let i=e[n].result._user,o="0x"+h.address.toHex(t).substr(2);console.log(`${i}==${o}`),console.log(i==o),i==o&&r.push({from:h.address.fromHex(e[n].result._referral),value:500,trxId:e[n].transaction_id})}return console.log(`TransactionReferral from ${t}: `,r),r},I=async(e,t)=>{let r=[];for(const n in e)if("getPoolPayment"==e[n].event_name){if(e[n].result._receiver=="0x"+h.address.toHex(t).substr(2)){let t,i=Number(e[n].result._value)/10**6;switch(i){case 500:t=1;break;case 1e3:t=2;break;case 2e3:t=3;break;case 4e3:t=4;break;case 8e3:t=5;break;case 16e3:t=6;break;case 32e3:t=7;break;case 64e3:t=8;break;default:throw"incorrect sumOfPool: "+(500==i)}r.push({from:h.address.fromHex(e[n].result._user),value:Number(e[n].result._value)/10**6,trxId:e[n].transaction_id,poolNo:t})}}return console.log(`TransactionPoolPayments from ${t}: `,r),r},N=async e=>{console.log("start");const t=await m.trx.getBalance(m.defaultAddress.base58);console.log(t+">520000000"),g.regUser(e).send({feeLimit:1e8,callValue:5e8,shouldPollResponse:!0}).then(e=>{console.log(e),T(m.defaultAddress.base58)}).catch(e=>{console.log(e)}),g.regLevelEvent().watch((e,t)=>{if(e)return console.error('Error with "method" event:',e);t&&(console.log("eventResult:",t),console.log("user: ",t.result._user),m.address.fromHex(t.result._user)==m.address.fromHex(m.defaultAddress.base58)&&T(m.defaultAddress.base58))})},T=async e=>{if(Number.isInteger(Number(u()("#loginText").val()))&&(e=await g.userList(Number(u()("#loginText").val())).call()),h.isAddress(e)){const t=await g.users(e).call();t.isExist?(localStorage.setItem("address",e),localStorage.setItem("id",t.id),b=e,y=t.id,location.href="./auccount.html"):alert("User is not exist")}else alert("Incorrect address")};u()("#loginAuto").click(e=>{e.preventDefault(),(async()=>{if(m&&m.ready){const e=await g.users(m.defaultAddress.base58).call();e.isExist?(localStorage.setItem("address",m.defaultAddress.base58),localStorage.setItem("id",e.id),b=m.defaultAddress.base58,y=e.id,location.href="./auccount.html"):alert("User is not exist")}else alert("You have to start tronLink")})()}),u()("#login").click(async e=>{e.preventDefault();const t=u()("#loginText").val();T(t)}),u()("#register").click(async e=>{e.preventDefault();let t=await window.tronWeb;if(t){let e=await g.users(t.defaultAddress.base58).call();if(console.log(e),e.isExist)alert("you already registered");else{let r=Number(u()("#referralCode").val());if(r){41e40!=await g.userList(r).call()?(console.log(`registered(${r})`),N(r)):alert("User is not exist")}else t.isAddress(u()("#referralCode").val())?(e=await g.users(u()("#referralCode").val()).call(),r=Number(e.id),r?(console.log(`registered(${r})`),N(r)):alert("User is not exist")):(console.log(u()("#referralCode").val()),console.log(t.isAddress(u()("#referralCode").val())),alert("incorrect data"))}}else alert("You have to start tronLink")}),u()("#logout").click(async e=>{e.preventDefault(),localStorage.clear(),location.href="./"}),u()("#buyPool1").click(async e=>{e.preventDefault();let t=await window.tronWeb;const r=await t.trx.getBalance(b);t&&t.defaultAddress.base58||alert("You have to start tronLink"),t.defaultAddress.base58==t.address.fromHex(b)?(console.log(r+">=520000000"),r>=52e7?p[0].isExist?alert("You already have this pool"):(u()(".product .product-status:eq(0)").text(""),u()(".product .product-status:eq(0)").append("\n\t\t\t\t\t\t<div id=\"loader\" class=\"small-loader\">\n                          <div class='cssload-loader'>\n                              <div class='cssload-inner cssload-one'></div>\n                              <div class='cssload-inner cssload-two'></div>\n                              <div class='cssload-inner cssload-three'></div>\n                          </div>\n                        </div>\n\t\t\t\t\t"),g.buyPool1().send({feeLimit:1e8,callValue:5e8,shouldPollResponse:!0}).then(e=>{console.log(e)}).catch(e=>{console.log(e),console.log("not !"),u()(".product .product-status").each((function(e,t){u()(t).text(""),u()(t).append("<br>")})),u()(".product .product-status").each((function(e,t){u()(`.received_payments span:eq(${e})`).html(p[e].payment_received),p[e].isCompleted?u()(t).text("Completed"):p[e].isExist?(u()(t).text("Active"),u()(t).css("color","#f9c615")):u()(t).text("Not Active")}))})):r>=5e8?alert("You don't have balance for fee - 20trx"):alert("You don't have this balance")):(console.log(`${t.defaultAddress.base58}==${b}`),alert("Switch on your wallet in tronLink: "+t.address.fromHex(b)))}),u()("#buyPool2").click(async e=>{e.preventDefault();let t=await window.tronWeb;const r=await t.trx.getBalance(b);t&&t.defaultAddress.base58||alert("You have to start tronLink"),t.defaultAddress.base58==t.address.fromHex(b)?(console.log(r+">=1020000000"),r>=102e7?p[1].isExist?alert("You already have this pool"):p[0].isExist?(u()(".product .product-status:eq(1)").text(""),u()(".product .product-status:eq(1)").append("\n\t\t\t\t\t\t<div id=\"loader\" class=\"small-loader\">\n                          <div class='cssload-loader'>\n                              <div class='cssload-inner cssload-one'></div>\n                              <div class='cssload-inner cssload-two'></div>\n                              <div class='cssload-inner cssload-three'></div>\n                          </div>\n                        </div>\n\t\t\t\t\t"),g.buyPool2().send({feeLimit:1e8,callValue:1e9,shouldPollResponse:!0}).then(e=>{console.log(e)}).catch(e=>{console.log(e),console.log("not !"),u()(".product .product-status").each((function(e,t){u()(t).text(""),u()(t).append("<br>")})),u()(".product .product-status").each((function(e,t){u()(`.received_payments span:eq(${e})`).html(p[e].payment_received),p[e].isCompleted?u()(t).text("Completed"):p[e].isExist?(u()(t).text("Active"),u()(t).css("color","#f9c615")):u()(t).text("Not Active")}))})):alert("You have to buy previus pool"):1e9==r?alert("You don't have balance for fee - 20trx"):alert("You don't have this balance")):alert("Switch on your wallet in tronLink: "+t.address.fromHex(b))}),u()("#buyPool3").click(async e=>{e.preventDefault();let t=await window.tronWeb;console.log("click");const r=await t.trx.getBalance(b);t&&t.defaultAddress.base58||alert("You have to start tronLink"),t.defaultAddress.base58==t.address.fromHex(b)?r>=202e7?p[2].isExist?alert("You already have this pool"):p[1].isExist?(u()(".product .product-status:eq(2)").text(""),u()(".product .product-status:eq(2)").append("\n\t\t\t\t\t\t<div id=\"loader\" class=\"small-loader\">\n                          <div class='cssload-loader'>\n                              <div class='cssload-inner cssload-one'></div>\n                              <div class='cssload-inner cssload-two'></div>\n                              <div class='cssload-inner cssload-three'></div>\n                          </div>\n                        </div>\n\t\t\t\t\t"),await g.buyPool3().send({feeLimit:1e8,callValue:2e9,shouldPollResponse:!0}).then(e=>{console.log(e)}).catch(e=>{console.log(e),console.log("not !"),u()(".product .product-status").each((function(e,t){u()(t).text(""),u()(t).append("<br>")})),u()(".product .product-status").each((function(e,t){u()(`.received_payments span:eq(${e})`).html(p[e].payment_received),p[e].isCompleted?u()(t).text("Completed"):p[e].isExist?(u()(t).text("Active"),u()(t).css("color","#f9c615")):u()(t).text("Not Active")}))})):alert("You have to buy previus pool"):2e9==r?alert("You don't have balance for fee - 20trx"):alert("You don't have this balance"):alert("Switch on your wallet in tronLink: "+t.address.fromHex(b))}),u()("#buyPool4").click(async e=>{e.preventDefault();let t=await window.tronWeb;const r=await t.trx.getBalance(b);t&&t.defaultAddress.base58||alert("You have to start tronLink"),t.defaultAddress.base58==t.address.fromHex(b)?r>=402e7?p[3].isExist?alert("You already have this pool"):p[2].isExist?(u()(".product .product-status:eq(3)").text(""),u()(".product .product-status:eq(3)").append("\n\t\t\t\t\t\t<div id=\"loader\" class=\"small-loader\">\n                          <div class='cssload-loader'>\n                              <div class='cssload-inner cssload-one'></div>\n                              <div class='cssload-inner cssload-two'></div>\n                              <div class='cssload-inner cssload-three'></div>\n                          </div>\n                        </div>\n\t\t\t\t\t"),await g.buyPool4().send({feeLimit:1e8,callValue:4e9,shouldPollResponse:!0}).then(e=>{console.log(e)}).catch(e=>{console.log(e),console.log("not !"),u()(".product .product-status").each((function(e,t){u()(t).text(""),u()(t).append("<br>")})),u()(".product .product-status").each((function(e,t){u()(`.received_payments span:eq(${e})`).html(p[e].payment_received),p[e].isCompleted?u()(t).text("Completed"):p[e].isExist?(u()(t).text("Active"),u()(t).css("color","#f9c615")):u()(t).text("Not Active")}))})):alert("You have to buy previous pool"):4e9==r?alert("You don't have balance for fee - 20trx"):alert("You don't have this balance"):(console.log(`${t.defaultAddress.base58}==${b}`),alert("Switch on your wallet in tronLink: "+t.address.fromHex(b)))}),u()("#buyPool5").click(async e=>{e.preventDefault();let t=await window.tronWeb;const r=await t.trx.getBalance(b);t&&t.defaultAddress.base58||alert("You have to start tronLink"),t.defaultAddress.base58==t.address.fromHex(b)?r>=802e7?p[4].isExist?alert("You already have this pool"):p[3].isExist?(u()(".product .product-status:eq(4)").text(""),u()(".product .product-status:eq(4)").append("\n\t\t\t\t\t\t<div id=\"loader\" class=\"small-loader\">\n                          <div class='cssload-loader'>\n                              <div class='cssload-inner cssload-one'></div>\n                              <div class='cssload-inner cssload-two'></div>\n                              <div class='cssload-inner cssload-three'></div>\n                          </div>\n                        </div>\n\t\t\t\t\t"),await g.buyPool5().send({feeLimit:1e8,callValue:8e9,shouldPollResponse:!0}).then(e=>{console.log(e)}).catch(e=>{console.log(e),console.log("not !"),u()(".product .product-status").each((function(e,t){u()(t).text(""),u()(t).append("<br>")})),u()(".product .product-status").each((function(e,t){u()(`.received_payments span:eq(${e})`).html(p[e].payment_received),p[e].isCompleted?u()(t).text("Completed"):p[e].isExist?(u()(t).text("Active"),u()(t).css("color","#f9c615")):u()(t).text("Not Active")}))})):alert("You have to buy previous pool"):8e9==r?alert("You don't have balance for fee - 20trx"):alert("You don't have this balance"):alert("Switch on your wallet in tronLink: "+t.address.fromHex(b))}),u()("#buyPool6").click(async e=>{e.preventDefault();let t=await window.tronWeb;const r=await t.trx.getBalance(b);t&&t.defaultAddress.base58||alert("You have to start tronLink"),t.defaultAddress.base58==t.address.fromHex(b)?r>=1602e7?p[5].isExist?alert("You already have this pool"):p[4].isExist?(u()(".product .product-status:eq(5)").text(""),u()(".product .product-status:eq(5)").append("\n\t\t\t\t\t\t<div id=\"loader\" class=\"small-loader\">\n                          <div class='cssload-loader'>\n                              <div class='cssload-inner cssload-one'></div>\n                              <div class='cssload-inner cssload-two'></div>\n                              <div class='cssload-inner cssload-three'></div>\n                          </div>\n                        </div>\n\t\t\t\t\t"),await g.buyPool6().send({feeLimit:1e8,callValue:16e9,shouldPollResponse:!0}).then(e=>{console.log(e)}).catch(e=>{console.log(e),console.log("not !"),u()(".product .product-status").each((function(e,t){u()(t).text(""),u()(t).append("<br>")})),u()(".product .product-status").each((function(e,t){u()(`.received_payments span:eq(${e})`).html(p[e].payment_received),p[e].isCompleted?u()(t).text("Completed"):p[e].isExist?(u()(t).text("Active"),u()(t).css("color","#f9c615")):u()(t).text("Not Active")}))})):alert("You have to buy previous pool"):16e9==r?alert("You don't have balance for fee - 20trx"):alert("You don't have this balance"):alert("Switch on your wallet in tronLink: "+t.address.fromHex(b))}),u()("#buyPool7").click(async e=>{e.preventDefault();let t=await window.tronWeb;const r=await t.trx.getBalance(b);t&&t.defaultAddress.base58||alert("You have to start tronLink"),t.defaultAddress.base58==t.address.fromHex(b)?r>=3202e7?p[6].isExist?alert("You already have this pool"):p[5].isExist?(u()(".product .product-status:eq(8)").text(""),u()(".product .product-status:eq(8)").append("\n\t\t\t\t\t\t<div id=\"loader\" class=\"small-loader\">\n                          <div class='cssload-loader'>\n                              <div class='cssload-inner cssload-one'></div>\n                              <div class='cssload-inner cssload-two'></div>\n                              <div class='cssload-inner cssload-three'></div>\n                          </div>\n                        </div>\n\t\t\t\t\t"),await g.buyPool7().send({feeLimit:1e8,callValue:32e9,shouldPollResponse:!0}).then(e=>{console.log(e)}).catch(e=>{console.log(e),console.log("not !"),u()(".product .product-status").each((function(e,t){u()(t).text(""),u()(t).append("<br>")})),u()(".product .product-status").each((function(e,t){u()(`.received_payments span:eq(${e})`).html(p[e].payment_received),p[e].isCompleted?u()(t).text("Completed"):p[e].isExist?(u()(t).text("Active"),u()(t).css("color","#f9c615")):u()(t).text("Not Active")}))})):alert("You have to buy previous pool"):32e9==r?alert("You don't have balance for fee - 20trx"):alert("You don't have this balance"):alert("Switch on your wallet in tronLink: "+t.address.fromHex(b))}),u()("#buyPool8").click(async e=>{e.preventDefault();let t=await window.tronWeb;const r=await t.trx.getBalance(b);t&&t.defaultAddress.base58||alert("You have to start tronLink"),t.defaultAddress.base58==t.address.fromHex(b)?r>=6402e7?p[7].isExist?alert("You already have this pool"):p[6].isExist?(u()(".product .product-status:eq(7)").text(""),u()(".product .product-status:eq(7)").append("\n\t\t\t\t\t\t<div id=\"loader\" class=\"small-loader\">\n                          <div class='cssload-loader'>\n                              <div class='cssload-inner cssload-one'></div>\n                              <div class='cssload-inner cssload-two'></div>\n                              <div class='cssload-inner cssload-three'></div>\n                          </div>\n                        </div>\n\t\t\t\t\t"),await g.buyPool8().send({feeLimit:1e8,callValue:64e9,shouldPollResponse:!0}).then(e=>{console.log(e)}).catch(e=>{console.log(e),console.log("not !"),u()(".product .product-status").each((function(e,t){u()(t).text(""),u()(t).append("<br>")})),u()(".product .product-status").each((function(e,t){u()(`.received_payments span:eq(${e})`).html(p[e].payment_received),p[e].isCompleted?u()(t).text("Completed"):p[e].isExist?(u()(t).text("Active"),u()(t).css("color","#f9c615")):u()(t).text("Not Active")}))})):alert("You have to buy previous pool"):64e9==r?alert("You don't have balance for fee - 20trx"):alert("You don't have this balance"):alert("Switch on your wallet in tronLink: "+t.address.fromHex(b))})},function(e,t,r){"use strict";var n=r(2),i=r(21),o=r(52),a=r(28);function s(e){var t=new o(e),r=i(o.prototype.request,t);return n.extend(r,o.prototype,t),n.extend(r,t),r}var u=s(r(24));u.Axios=o,u.create=function(e){return s(a(u.defaults,e))},u.Cancel=r(29),u.CancelToken=r(65),u.isCancel=r(23),u.all=function(e){return Promise.all(e)},u.spread=r(66),e.exports=u,e.exports.default=u},function(e,t,r){"use strict";var n=r(2),i=r(22),o=r(53),a=r(54),s=r(28);function u(e){this.defaults=e,this.interceptors={request:new o,response:new o}}u.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=s(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[a,void 0],r=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)r=r.then(t.shift(),t.shift());return r},u.prototype.getUri=function(e){return e=s(this.defaults,e),i(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},n.forEach(["delete","get","head","options"],(function(e){u.prototype[e]=function(t,r){return this.request(n.merge(r||{},{method:e,url:t}))}})),n.forEach(["post","put","patch"],(function(e){u.prototype[e]=function(t,r,i){return this.request(n.merge(i||{},{method:e,url:t,data:r}))}})),e.exports=u},function(e,t,r){"use strict";var n=r(2);function i(){this.handlers=[]}i.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},i.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},i.prototype.forEach=function(e){n.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=i},function(e,t,r){"use strict";var n=r(2),i=r(55),o=r(23),a=r(24);function s(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return s(e),e.headers=e.headers||{},e.data=i(e.data,e.headers,e.transformRequest),e.headers=n.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),n.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||a.adapter)(e).then((function(t){return s(e),t.data=i(t.data,t.headers,e.transformResponse),t}),(function(t){return o(t)||(s(e),t&&t.response&&(t.response.data=i(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},function(e,t,r){"use strict";var n=r(2);e.exports=function(e,t,r){return n.forEach(r,(function(r){e=r(e,t)})),e}},function(e,t,r){"use strict";var n=r(2);e.exports=function(e,t){n.forEach(e,(function(r,n){n!==t&&n.toUpperCase()===t.toUpperCase()&&(e[t]=r,delete e[n])}))}},